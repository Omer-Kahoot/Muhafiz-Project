<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Namespaces>
  <Namespace Name="MuhafizWebPortal.Models">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'MuhafizWebPortal.Models' with another namespace.</Issue>
    </Message>
    <Message Id="Muhafiz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Muhafiz' in namespace name 'MuhafizWebPortal.Models'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WebApplication">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WebApplication' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WebApplication.Controllers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WebApplication.Controllers' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="I:\Source Control\Final Code\Web Application\thistimepls\bin\thistimepls.dll">
   <Modules>
    <Module Name="thistimepls.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'thistimepls.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="thistimepls" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'thistimepls' in assembly name 'thistimepls.dll' by changing it to 'Thistimepls'.</Issue>
      </Message>
      <Message Id="thistimepls" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'thistimepls' in assembly name 'thistimepls.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'thistimepls.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="MuhafizWebPortal.Models">
       <Types>
        <Type Name="WhomMuhafizNotify" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Muhafiz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Muhafiz' in type name 'WhomMuhafizNotify'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WhomUserNotified" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Notified_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="WhomUserNotified.cs" Line="11">Remove the underscores from member name 'WhomUserNotified.Notified_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WebApplication">
       <Types>
        <Type Name="MvcApplication" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mvc' in type name 'MvcApplication'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Application_Start()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls" File="Global.asax.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'MvcApplication.Application_Start()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RouteConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'RouteConfig' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WebApplication.Controllers">
       <Types>
        <Type Name="AdminController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Approve1(System.Nullable`1&lt;System.Int32&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="204">In method 'AdminController.Approve1(int?, string)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApproveConfirmed(System.Nullable`1&lt;System.Int32&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="248">In method 'AdminController.ApproveConfirmed(int?, string)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Confirm(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="724">In method 'AdminController.Confirm(int?, int?)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfirmDetails(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="748">In method 'AdminController.ConfirmDetails(int?, int?)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="param" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="748">Parameter 'param' of 'AdminController.ConfirmDetails(int?, int?)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#currentpasswordVerfication(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="685">In method 'AdminController.currentpasswordVerfication(string)', call System.IDisposable.Dispose on object 'MD5.Create()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="currentpassword" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="680">Correct the casing of 'currentpassword' in member name 'AdminController.currentpasswordVerfication(string)' by changing it to 'Currentpassword'.</Issue>
            </Message>
            <Message Id="Verfication" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="680">Correct the spelling of 'Verfication' in member name 'AdminController.currentpasswordVerfication(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="currentpassword" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="680">Correct the spelling of 'currentpassword' in member name 'AdminController.currentpasswordVerfication(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="686">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'AdminController.currentpasswordVerfication(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Discard(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="350">In method 'AdminController.Discard(int?, int?)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="param" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="350">Parameter 'param' of 'AdminController.Discard(int?, int?)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllThreathRequests(System.Nullable`1&lt;System.Int32&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Threath" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="310">Correct the spelling of 'Threath' in member name 'AdminController.GetAllThreathRequests(int?, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="returnmessage" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="310">In method 'AdminController.GetAllThreathRequests(int?, string)', correct the spelling of 'returnmessage' in parameter name 'returnmessage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize(WebApplication.Models.ThreatReportViewModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Model" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="466">In member 'AdminController.Initialize(ThreatReportViewModel)', correct the casing of 'Model' in parameter name 'ModelData' by changing it to 'model'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="466">The 'this' parameter (or 'Me' in Visual Basic) of 'AdminController.Initialize(ThreatReportViewModel)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="468">In externally visible method 'AdminController.Initialize(ThreatReportViewModel)', validate parameter 'ModelData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeWhoToNotify(WebApplication.Models.ThreatReportViewModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Model" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="496">In member 'AdminController.InitializeWhoToNotify(ThreatReportViewModel)', correct the casing of 'Model' in parameter name 'ModelData' by changing it to 'model'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="496">The 'this' parameter (or 'Me' in Visual Basic) of 'AdminController.InitializeWhoToNotify(ThreatReportViewModel)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="498">In externally visible method 'AdminController.InitializeWhoToNotify(ThreatReportViewModel)', validate parameter 'ModelData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostDateToCont(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PostDate" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="490">The compound word 'PostDate' in member name 'AdminController.PostDateToCont(string)' exists as a discrete term. If your usage is intended to be single word, case it as 'Postdate' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="490">In member 'AdminController.PostDateToCont(string)', correct the casing of 'Date' in parameter name 'DateValue' by changing it to 'date'.</Issue>
            </Message>
            <Message Id="Cont" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="490">Correct the spelling of 'Cont' in member name 'AdminController.PostDateToCont(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Process(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="522">In method 'AdminController.Process(int?, int?)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Process(WebApplication.Models.ThreatReportViewModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="val" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="629">'AdminController.Process(ThreatReportViewModel)' declares a variable, 'val', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="600">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AdminController.Process(ThreatReportViewModel)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="651">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'AdminController.Process(ThreatReportViewModel)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="579">In externally visible method 'AdminController.Process(ThreatReportViewModel)', validate parameter 'viewModel' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessAlert(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Attackid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="142">In member 'AdminController.ProcessAlert(int?, int?)', correct the casing of 'Attackid' in parameter name 'Attackid' by changing it to 'attackid'.</Issue>
            </Message>
            <Message Id="Userid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="142">In member 'AdminController.ProcessAlert(int?, int?)', correct the casing of 'Userid' in parameter name 'Userid' by changing it to 'userid'.</Issue>
            </Message>
            <Message Id="Attackid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="142">In method 'AdminController.ProcessAlert(int?, int?)', correct the spelling of 'Attackid' in parameter name 'Attackid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Userid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="142">In method 'AdminController.ProcessAlert(int?, int?)', correct the spelling of 'Userid' in parameter name 'Userid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reject(System.Nullable`1&lt;System.Int32&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="275">In method 'AdminController.Reject(int?, int)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequestsAll" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="22">Change 'AdminController.RequestsAll' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="22">Change 'List&lt;cPerson&gt;' in 'AdminController.RequestsAll' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sendsms(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sendsms" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="221">Correct the casing of 'sendsms' in member name 'AdminController.sendsms(string, string)' by changing it to 'Sendsms'.</Issue>
            </Message>
            <Message Id="Mobileno" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="221">In method 'AdminController.sendsms(string, string)', correct the spelling of 'Mobileno' in parameter name 'recieptMobileno' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="reciept" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="221">In method 'AdminController.sendsms(string, string)', correct the spelling of 'reciept' in parameter name 'recieptMobileno' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sendsms" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="221">Correct the spelling of 'sendsms' in member name 'AdminController.sendsms(string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="221">In member 'AdminController.sendsms(string, string)', consider replacing the data type identifier 'String' in parameter name 'requestUriString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="221">The 'this' parameter (or 'Me' in Visual Basic) of 'AdminController.sendsms(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="strOutputXml" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="242">'AdminController.sendsms(string, string)' declares a variable, 'strOutputXml', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="221">Change the type of parameter 'requestUriString' of method 'AdminController.sendsms(string, string)' from string to System.Uri, or provide an overload of 'AdminController.sendsms(string, string)', that allows 'requestUriString' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#test(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="672">In member 'AdminController.test(string)', correct the casing of 'Text' in parameter name 'TextBoxVal' by changing it to 'text'.</Issue>
            </Message>
            <Message Id="test" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="672">Correct the casing of 'test' in member name 'AdminController.test(string)' by changing it to 'Test'.</Issue>
            </Message>
            <Message Id="Val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="672">In method 'AdminController.test(string)', correct the spelling of 'Val' in parameter name 'TextBoxVal' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThreatDetails(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="785">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'AdminController.ThreatDetails(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThreatSearchIndex(System.String,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="770">In member 'AdminController.ThreatSearchIndex(string, int?)', consider replacing the data type identifier 'String' in parameter name 'searchString' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateInfo(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="379">In method 'AdminController.UpdateInfo(int?, int?, string)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="returnmessage" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="379">In method 'AdminController.UpdateInfo(int?, int?, string)', correct the spelling of 'returnmessage' in parameter name 'returnmessage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateInfo(WebApplication.Models.cPerson)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="userobj" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="422">In method 'AdminController.UpdateInfo(cPerson)', correct the spelling of 'userobj' in parameter name 'userobj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="errors" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="AdminController.cs" Line="435">'AdminController.UpdateInfo(cPerson)' declares a variable, 'errors', of type '&lt;Anonymous Type&gt;[]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HomeController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AdminLogin(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="returnmessage" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="28">In method 'HomeController.AdminLogin(string)', correct the spelling of 'returnmessage' in parameter name 'returnmessage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="28">Replace the term 'Login' in member name 'HomeController.AdminLogin(string)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdminLogin(WebApplication.Models.Admin)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="35">Replace the term 'Login' in member name 'HomeController.AdminLogin(Admin)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="42">In externally visible method 'HomeController.AdminLogin(Admin)', validate parameter 'user' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdminLogout()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Logout" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="162">Replace the term 'Logout' in member name 'HomeController.AdminLogout()' with the preferred alternate 'LogOff'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Login(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="returnmessage" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="59">In method 'HomeController.Login(string)', correct the spelling of 'returnmessage' in parameter name 'returnmessage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="59">Replace the term 'Login' in member name 'HomeController.Login(string)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Login(WebApplication.Models.cPerson)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="68">Replace the term 'Login' in member name 'HomeController.Login(cPerson)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="74">In externally visible method 'HomeController.Login(cPerson)', validate parameter 'user' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Logout()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Logout" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="152">Replace the term 'Logout' in member name 'HomeController.Logout()' with the preferred alternate 'LogOff'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrganizationText(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Text" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="172">In member 'HomeController.OrganizationText(string)', correct the casing of 'Text' in parameter name 'TextBoxVal' by changing it to 'text'.</Issue>
            </Message>
            <Message Id="Val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="172">In method 'HomeController.OrganizationText(string)', correct the spelling of 'Val' in parameter name 'TextBoxVal' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Register(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="returnmessage" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="100">In method 'HomeController.Register(string)', correct the spelling of 'returnmessage' in parameter name 'returnmessage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Register(WebApplication.Models.cPerson)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="errors" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="110">'HomeController.Register(cPerson)' declares a variable, 'errors', of type '&lt;Anonymous Type&gt;[]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="HomeController.cs" Line="117">In externally visible method 'HomeController.Register(cPerson)', validate parameter 'user' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoginedHome(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Logined" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="197">Correct the spelling of 'Logined' in member name 'UserController.LoginedHome(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="returnmessage" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="197">In method 'UserController.LoginedHome(string)', correct the spelling of 'returnmessage' in parameter name 'returnmessage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProfileSettingRequest(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="returnmessage" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="256">In method 'UserController.ProfileSettingRequest(string)', correct the spelling of 'returnmessage' in parameter name 'returnmessage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReportaThreat(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Reporta" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="133">Correct the spelling of 'Reporta' in member name 'UserController.ReportaThreat(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="returnmessage" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="133">In method 'UserController.ReportaThreat(string)', correct the spelling of 'returnmessage' in parameter name 'returnmessage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReportThreat(WebApplication.Models.ThreatReportViewModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="modelobj" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="168">In method 'UserController.ReportThreat(ThreatReportViewModel)', correct the spelling of 'modelobj' in parameter name 'modelobj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="171">In externally visible method 'UserController.ReportThreat(ThreatReportViewModel)', validate parameter 'modelobj' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#reservedCharacters" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'UserController.reservedCharacters' is declared as 'static readonly' but is initialized with a constant value '!*'();:@&amp;=+$,/?%#[]'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sendsms(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sendsms" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="46">Correct the casing of 'sendsms' in member name 'UserController.sendsms(string, string)' by changing it to 'Sendsms'.</Issue>
            </Message>
            <Message Id="Mobileno" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="46">In method 'UserController.sendsms(string, string)', correct the spelling of 'Mobileno' in parameter name 'recieptMobileno' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="reciept" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="46">In method 'UserController.sendsms(string, string)', correct the spelling of 'reciept' in parameter name 'recieptMobileno' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sendsms" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="46">Correct the spelling of 'sendsms' in member name 'UserController.sendsms(string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="46">In member 'UserController.sendsms(string, string)', consider replacing the data type identifier 'String' in parameter name 'requestUriString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="46">The 'this' parameter (or 'Me' in Visual Basic) of 'UserController.sendsms(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="strOutputXml" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="68">'UserController.sendsms(string, string)' declares a variable, 'strOutputXml', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="46">Change the type of parameter 'requestUriString' of method 'UserController.sendsms(string, string)' from string to System.Uri, or provide an overload of 'UserController.sendsms(string, string)', that allows 'requestUriString' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UrlEncode(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Controllers" File="UserController.cs" Line="29">Change the return type of 'UserController.UrlEncode(string)' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WebApplication.Models">
       <Types>
        <Type Name="Admin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Admin' because it creates members of the following IDisposable types: 'MySqlConnection'. If 'Admin' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ApproveUser(System.Nullable`1&lt;System.Int32&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="851">In method 'Admin.ApproveUser(int?, string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="845">In method 'Admin.ApproveUser(int?, string)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="867">'Admin.ApproveUser(int?, string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="numRowsUpdated" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="859">'Admin.ApproveUser(int?, string)' declares a variable, 'numRowsUpdated', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="855">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.ApproveUser(int?, string)' could contain the following variables 'id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="param" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="845">Parameter 'param' of 'Admin.ApproveUser(int?, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="855">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.ApproveUser(int?, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfirmDetailsByAdmin(System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="679">In method 'Admin.ConfirmDetailsByAdmin(int?)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="686">In method 'Admin.ConfirmDetailsByAdmin(int?)', call System.IDisposable.Dispose on object 'cmd2' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="699">'Admin.ConfirmDetailsByAdmin(int?)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="RowsUpdated2" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="690">'Admin.ConfirmDetailsByAdmin(int?)' declares a variable, 'RowsUpdated2', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="numRowsUpdated" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="683">'Admin.ConfirmDetailsByAdmin(int?)' declares a variable, 'numRowsUpdated', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="681">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.ConfirmDetailsByAdmin(int?)' could contain the following variables 'id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="688">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.ConfirmDetailsByAdmin(int?)' could contain the following variables 'id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="681">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.ConfirmDetailsByAdmin(int?)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="688">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.ConfirmDetailsByAdmin(int?)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#connection_open" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Admin.connection_open' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#converttoencryptedPassword(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="38">In method 'Admin.converttoencryptedPassword(string)', call System.IDisposable.Dispose on object 'MD5.Create()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="converttoencrypted" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="35">Correct the casing of 'converttoencrypted' in member name 'Admin.converttoencryptedPassword(string)' by changing it to 'Converttoencrypted'.</Issue>
            </Message>
            <Message Id="converttoencrypted" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="35">Correct the spelling of 'converttoencrypted' in member name 'Admin.converttoencryptedPassword(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="35">The 'this' parameter (or 'Me' in Visual Basic) of 'Admin.converttoencryptedPassword(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="39">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Admin.converttoencryptedPassword(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiscardthreatReq(System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="817">In method 'Admin.DiscardthreatReq(int?)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Discardthreat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="812">Correct the spelling of 'Discardthreat' in member name 'Admin.DiscardthreatReq(int?)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Req" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="812">Correct the spelling of 'Req' in member name 'Admin.DiscardthreatReq(int?)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="832">'Admin.DiscardthreatReq(int?)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="numRowsUpdated" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="824">'Admin.DiscardthreatReq(int?)' declares a variable, 'numRowsUpdated', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="820">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.DiscardthreatReq(int?)' could contain the following variables 'id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="820">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.DiscardthreatReq(int?)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAlertDetails(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="485">In method 'Admin.GetAlertDetails(int?, int?)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Attackid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="480">In member 'Admin.GetAlertDetails(int?, int?)', correct the casing of 'Attackid' in parameter name 'Attackid' by changing it to 'attackid'.</Issue>
            </Message>
            <Message Id="Userid" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="480">In member 'Admin.GetAlertDetails(int?, int?)', correct the casing of 'Userid' in parameter name 'Userid' by changing it to 'userid'.</Issue>
            </Message>
            <Message Id="Attackid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="480">In method 'Admin.GetAlertDetails(int?, int?)', correct the spelling of 'Attackid' in parameter name 'Attackid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Userid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="480">In method 'Admin.GetAlertDetails(int?, int?)', correct the spelling of 'Userid' in parameter name 'Userid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="514">'Admin.GetAlertDetails(int?, int?)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="487">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetAlertDetails(int?, int?)' could contain the following variables 'Attackid'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="500">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAlertDetails(int?, int?)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="487">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAlertDetails(int?, int?)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllRegisteredUsers()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="937">In method 'Admin.GetAllRegisteredUsers()', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="934">Change 'List&lt;cPerson&gt;' in 'Admin.GetAllRegisteredUsers()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="952">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllRegisteredUsers()' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="945">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllRegisteredUsers()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="939">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllRegisteredUsers()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="934">Change 'Admin.GetAllRegisteredUsers()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllRequests()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="911">In method 'Admin.GetAllRequests()', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="908">Change 'List&lt;cPerson&gt;' in 'Admin.GetAllRequests()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="919">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllRequests()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="913">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllRequests()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="908">Change 'Admin.GetAllRequests()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllThreatHistories()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="582">In method 'Admin.GetAllThreatHistories()', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="575">Change 'List&lt;ThreatReportViewModel&gt;' in 'Admin.GetAllThreatHistories()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="612">'Admin.GetAllThreatHistories()' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="594">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllThreatHistories()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="598">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllThreatHistories()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="599">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllThreatHistories()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="584">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllThreatHistories()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="575">Change 'Admin.GetAllThreatHistories()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllThreatHistoriesByUserName(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="533">In method 'Admin.GetAllThreatHistoriesByUserName(string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="526">Change 'List&lt;ThreatReportViewModel&gt;' in 'Admin.GetAllThreatHistoriesByUserName(string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="searchstring" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="526">In method 'Admin.GetAllThreatHistoriesByUserName(string)', correct the spelling of 'searchstring' in parameter name 'searchstring' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="563">'Admin.GetAllThreatHistoriesByUserName(string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="535">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetAllThreatHistoriesByUserName(string)' could contain the following variables 'searchstring'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="545">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllThreatHistoriesByUserName(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="549">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllThreatHistoriesByUserName(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="550">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllThreatHistoriesByUserName(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="535">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllThreatHistoriesByUserName(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllUpdateInfoRequests()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="395">In method 'Admin.GetAllUpdateInfoRequests()', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="392">Change 'List&lt;ProfileSettingViewModel&gt;' in 'Admin.GetAllUpdateInfoRequests()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="406">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllUpdateInfoRequests()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="407">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllUpdateInfoRequests()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="398">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetAllUpdateInfoRequests()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="392">Change 'Admin.GetAllUpdateInfoRequests()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetConfirmedThreatDetail()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="631">In method 'Admin.GetConfirmedThreatDetail()', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="624">Change 'List&lt;ThreatReportViewModel&gt;' in 'Admin.GetConfirmedThreatDetail()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="660">'Admin.GetConfirmedThreatDetail()' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="643">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetConfirmedThreatDetail()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="647">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetConfirmedThreatDetail()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="648">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetConfirmedThreatDetail()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="633">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetConfirmedThreatDetail()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="624">Change 'Admin.GetConfirmedThreatDetail()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPanicAlertCount()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="53">In method 'Admin.GetPanicAlertCount()', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="66">'Admin.GetPanicAlertCount()' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="79">'Admin.GetPanicAlertCount()' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="58">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetPanicAlertCount()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="55">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetPanicAlertCount()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="46">Change 'Admin.GetPanicAlertCount()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPanicAlerts()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="432">In method 'Admin.GetPanicAlerts()', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="460">In method 'Admin.GetPanicAlerts()', call System.IDisposable.Dispose on object 'cmd1' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="426">Change 'List&lt;PanicAlertViewModel&gt;' in 'Admin.GetPanicAlerts()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="470">'Admin.GetPanicAlerts()' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="numRowsUpdated" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="463">'Admin.GetPanicAlerts()' declares a variable, 'numRowsUpdated', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="443">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetPanicAlerts()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="444">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetPanicAlerts()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="434">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetPanicAlerts()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="462">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetPanicAlerts()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="426">Change 'Admin.GetPanicAlerts()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetThreatRequest(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="726">In method 'Admin.GetThreatRequest(int?, int?)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="778">In method 'Admin.GetThreatRequest(int?, int?)', call System.IDisposable.Dispose on object 'cmd2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="751">In method 'Admin.GetThreatRequest(int?, int?)', call System.IDisposable.Dispose on object 'cmd3' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="717">In method 'Admin.GetThreatRequest(int?, int?)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="728">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetThreatRequest(int?, int?)' could contain the following variables 'id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="753">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetThreatRequest(int?, int?)' could contain the following variables 'id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="param" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="717">Parameter 'param' of 'Admin.GetThreatRequest(int?, int?)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="741">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequest(int?, int?)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="737">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequest(int?, int?)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="738">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequest(int?, int?)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="760">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequest(int?, int?)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="761">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequest(int?, int?)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="728">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequest(int?, int?)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="753">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequest(int?, int?)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetThreatRequests()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="967">In method 'Admin.GetThreatRequests()', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="964">Change 'List&lt;ThreatReportViewModel&gt;' in 'Admin.GetThreatRequests()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="980">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequests()' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="977">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequests()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="978">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequests()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="969">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'Admin.GetThreatRequests()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="964">Change 'Admin.GetThreatRequests()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUser(System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="355">In method 'Admin.GetUser(int?, int?)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="350">In method 'Admin.GetUser(int?, int?)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="model" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="359">'Admin.GetUser(int?, int?)' declares a variable, 'model', of type 'cPerson', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="357">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetUser(int?, int?)' could contain the following variables 'id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="param" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="350">Parameter 'param' of 'Admin.GetUser(int?, int?)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="366">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUser(int?, int?)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="357">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUser(int?, int?)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserThreatDetails(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1075">In method 'Admin.GetUserThreatDetails(int)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1110">In method 'Admin.GetUserThreatDetails(int)', call System.IDisposable.Dispose on object 'cmd1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1142">In method 'Admin.GetUserThreatDetails(int)', call System.IDisposable.Dispose on object 'cmd2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1172">In method 'Admin.GetUserThreatDetails(int)', call System.IDisposable.Dispose on object 'cmd3' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Threat" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1064">In member 'Admin.GetUserThreatDetails(int)', correct the casing of 'Threat' in parameter name 'ThreatDetailId' by changing it to 'threat'.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1207">'Admin.GetUserThreatDetails(int)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1078">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetUserThreatDetails(int)' could contain the following variables 'ThreatDetailId'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1113">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetUserThreatDetails(int)' could contain the following variables 'ThreatDetailId'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1145">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetUserThreatDetails(int)' could contain the following variables 'ThreatDetailId'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1175">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.GetUserThreatDetails(int)' could contain the following variables 'ThreatDetailId'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToBoolean(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1092">Because the behavior of 'Convert.ToBoolean(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'Convert.ToBoolean(string, IFormatProvider)'. If the result of 'Convert.ToBoolean(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1087">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1122">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1125">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1153">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1155">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1183">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1185">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1078">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1113">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1145">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1175">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.GetUserThreatDetails(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="22">Correct the casing of 'ID' in member name 'Admin.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertReportDetails(WebApplication.Models.ThreatReportViewModel,System.Collections.Generic.List`1&lt;System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="200">In method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="266">In method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', call System.IDisposable.Dispose on object 'cmd1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="218">In method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', call System.IDisposable.Dispose on object 'cmd2' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="276">In method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', call System.IDisposable.Dispose on object 'cmd3' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="232">In method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', call System.IDisposable.Dispose on object 'cmd4' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="247">In method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', call System.IDisposable.Dispose on object 'cmd5' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="189">Change 'List&lt;string&gt;' in 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Dateval" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="189">In member 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', correct the casing of 'Dateval' in parameter name 'Dateval' by changing it to 'dateval'.</Issue>
            </Message>
            <Message Id="Dateval" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="189">In method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', correct the spelling of 'Dateval' in parameter name 'Dateval' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="namesofsuspects" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="189">In method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', correct the spelling of 'namesofsuspects' in parameter name 'namesofsuspects' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="304">'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="numRowsUpdated" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="284">'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)' declares a variable, 'numRowsUpdated', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="280">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)' could contain the following variables 'viewModel.ThreatNotification.ThreatNotification_Id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="280">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="203">In externally visible method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', validate parameter 'viewModel' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="216">In externally visible method 'Admin.InsertReportDetails(ThreatReportViewModel, List&lt;string&gt;, string)', validate parameter 'namesofsuspects' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidUser(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1006">In method 'Admin.IsValidUser(string, string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="useremail" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="999">In method 'Admin.IsValidUser(string, string)', correct the spelling of 'useremail' in parameter name 'useremail' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1046">'Admin.IsValidUser(string, string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1009">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.IsValidUser(string, string)' could contain the following variables 'useremail', 'this.converttoencryptedPassword(password)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1021">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Admin.IsValidUser(string, string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1009">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Admin.IsValidUser(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Open_Local_Connection()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="1256">'Admin.Open_Local_Connection()' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RejectUser(System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="883">In method 'Admin.RejectUser(int?)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="898">'Admin.RejectUser(int?)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="numRowsUpdated" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="890">'Admin.RejectUser(int?)' declares a variable, 'numRowsUpdated', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="887">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.RejectUser(int?)' could contain the following variables 'id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="887">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.RejectUser(int?)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendEmail(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="334">In method 'Admin.SendEmail(string, string, string)', call System.IDisposable.Dispose on object 'mm' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="325">In method 'Admin.SendEmail(string, string, string)', call System.IDisposable.Dispose on object 'new SmtpClient()' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="339">Modify 'Admin.SendEmail(string, string, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="343">'Admin.SendEmail(string, string, string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdatUserInfo(WebApplication.Models.cPerson)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="160">In method 'Admin.UpdatUserInfo(cPerson)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="124">In method 'Admin.UpdatUserInfo(cPerson)', call System.IDisposable.Dispose on object 'cmd1' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="103">In method 'Admin.UpdatUserInfo(cPerson)', call System.IDisposable.Dispose on object 'cmdUser' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Updat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="96">Correct the spelling of 'Updat' in member name 'Admin.UpdatUserInfo(cPerson)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="userobj" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="96">In method 'Admin.UpdatUserInfo(cPerson)', correct the spelling of 'userobj' in parameter name 'userobj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="174">'Admin.UpdatUserInfo(cPerson)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="numRowsUpdated" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="166">'Admin.UpdatUserInfo(cPerson)' declares a variable, 'numRowsUpdated', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="105">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.UpdatUserInfo(cPerson)' could contain the following variables 'userobj.Registration_Id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="126">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.UpdatUserInfo(cPerson)' could contain the following variables 'userobj.Registration_Id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="162">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'Admin.UpdatUserInfo(cPerson)' could contain the following variables 'userobj.Registration_Id'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="105">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.UpdatUserInfo(cPerson)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="126">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.UpdatUserInfo(cPerson)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="162">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Admin.UpdatUserInfo(cPerson)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Admin.cs" Line="105">In externally visible method 'Admin.UpdatUserInfo(cPerson)', validate parameter 'userobj' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="cPerson" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="c" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'c' in type name 'cPerson' by changing it to 'C'.</Issue>
          </Message>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'cPerson' because it creates members of the following IDisposable types: 'MySqlConnection'. If 'cPerson' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Confirmpassword" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Confirmpassword" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="48">Correct the spelling of 'Confirmpassword' in member name 'cPerson.Confirmpassword' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#connection_open" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'cPerson.connection_open' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#converttoencryptedPassword(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="81">In method 'cPerson.converttoencryptedPassword(string)', call System.IDisposable.Dispose on object 'MD5.Create()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="converttoencrypted" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="78">Correct the casing of 'converttoencrypted' in member name 'cPerson.converttoencryptedPassword(string)' by changing it to 'Converttoencrypted'.</Issue>
            </Message>
            <Message Id="converttoencrypted" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="78">Correct the spelling of 'converttoencrypted' in member name 'cPerson.converttoencryptedPassword(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="78">The 'this' parameter (or 'Me' in Visual Basic) of 'cPerson.converttoencryptedPassword(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="82">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'cPerson.converttoencryptedPassword(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#email" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="email" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="29">Correct the casing of 'email' in member name 'cPerson.email' by changing it to 'Email'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllReportHistory(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="164">In method 'cPerson.GetAllReportHistory(int)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="160">Change 'List&lt;ThreatReportViewModel&gt;' in 'cPerson.GetAllReportHistory(int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="190">'cPerson.GetAllReportHistory(int)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="166">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'cPerson.GetAllReportHistory(int)' could contain the following variables 'regId'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="175">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'cPerson.GetAllReportHistory(int)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="166">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'cPerson.GetAllReportHistory(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserAllReportCount(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="434">In method 'cPerson.GetUserAllReportCount(int)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="427">In member 'cPerson.GetUserAllReportCount(int)', correct the casing of 'ID' in parameter name 'regID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="450">'cPerson.GetUserAllReportCount(int)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="463">'cPerson.GetUserAllReportCount(int)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="436">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'cPerson.GetUserAllReportCount(int)' could contain the following variables 'regID'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="443">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'cPerson.GetUserAllReportCount(int)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="436">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'cPerson.GetUserAllReportCount(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEmailExist(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="316">In method 'cPerson.IsEmailExist(string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="useremail" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="309">In method 'cPerson.IsEmailExist(string)', correct the spelling of 'useremail' in parameter name 'useremail' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="352">'cPerson.IsEmailExist(string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="365">'cPerson.IsEmailExist(string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="User" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="311">'cPerson.IsEmailExist(string)' declares a variable, 'User', of type 'cPerson', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="318">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'cPerson.IsEmailExist(string)' could contain the following variables 'useremail'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="318">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'cPerson.IsEmailExist(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsPhoneExist(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="95">In method 'cPerson.IsPhoneExist(string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="phoneno" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="88">In method 'cPerson.IsPhoneExist(string)', correct the spelling of 'phoneno' in parameter name 'phoneno' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="131">'cPerson.IsPhoneExist(string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="144">'cPerson.IsPhoneExist(string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="User" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="90">'cPerson.IsPhoneExist(string)' declares a variable, 'User', of type 'cPerson', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="97">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'cPerson.IsPhoneExist(string)' could contain the following variables 'phoneno'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="97">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'cPerson.IsPhoneExist(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidUser(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="487">In method 'cPerson.IsValidUser(string, string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="useremail" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="480">In method 'cPerson.IsValidUser(string, string)', correct the spelling of 'useremail' in parameter name 'useremail' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="536">'cPerson.IsValidUser(string, string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="549">'cPerson.IsValidUser(string, string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="490">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'cPerson.IsValidUser(string, string)' could contain the following variables 'useremail', 'this.converttoencryptedPassword(password)'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="510">Because the behavior of 'Convert.ToDateTime(object)' could vary based on the current user's locale settings, replace this call in 'cPerson.IsValidUser(string, string)' with a call to 'Convert.ToDateTime(object, IFormatProvider)'. If the result of 'Convert.ToDateTime(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="502">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'cPerson.IsValidUser(string, string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="490">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'cPerson.IsValidUser(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#mobilde" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="mobilde" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="33">Correct the casing of 'mobilde' in member name 'cPerson.mobilde' by changing it to 'Mobilde'.</Issue>
            </Message>
            <Message Id="mobilde" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="33">Correct the spelling of 'mobilde' in member name 'cPerson.mobilde' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Open_Local_Connection()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="595">'cPerson.Open_Local_Connection()' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#orgname" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="orgname" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="39">Correct the casing of 'orgname' in member name 'cPerson.orgname' by changing it to 'Orgname'.</Issue>
            </Message>
            <Message Id="orgname" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="39">Correct the spelling of 'orgname' in member name 'cPerson.orgname' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PanicAlertRequest(WebApplication.Models.cPerson)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="250">In method 'cPerson.PanicAlertRequest(cPerson)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Userobj" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="244">In member 'cPerson.PanicAlertRequest(cPerson)', correct the casing of 'Userobj' in parameter name 'Userobj' by changing it to 'userobj'.</Issue>
            </Message>
            <Message Id="Userobj" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="244">In method 'cPerson.PanicAlertRequest(cPerson)', correct the spelling of 'Userobj' in parameter name 'Userobj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="264">'cPerson.PanicAlertRequest(cPerson)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="253">In externally visible method 'cPerson.PanicAlertRequest(cPerson)', validate parameter 'Userobj' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#password" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="password" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="45">Correct the casing of 'password' in member name 'cPerson.password' by changing it to 'Password'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterationDate" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Registeration" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="49">Correct the spelling of 'Registeration' in member name 'cPerson.RegisterationDate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Registration_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="22">Remove the underscores from member name 'cPerson.Registration_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegistrationRequest(WebApplication.Models.cPerson,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="403">In method 'cPerson.RegistrationRequest(cPerson, string)', call System.IDisposable.Dispose on object 'MD5.Create()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="385">In method 'cPerson.RegistrationRequest(cPerson, string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="User" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="377">In member 'cPerson.RegistrationRequest(cPerson, string)', correct the casing of 'User' in parameter name 'User' by changing it to 'user'.</Issue>
            </Message>
            <Message Id="organizationname" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="377">In method 'cPerson.RegistrationRequest(cPerson, string)', correct the spelling of 'organizationname' in parameter name 'organizationname' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="415">'cPerson.RegistrationRequest(cPerson, string)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="organizationname" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="377">Parameter 'organizationname' of 'cPerson.RegistrationRequest(cPerson, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="404">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'cPerson.RegistrationRequest(cPerson, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="388">In externally visible method 'cPerson.RegistrationRequest(cPerson, string)', validate parameter 'User' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#reportathreat(WebApplication.Models.ThreatReportViewModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="205">In method 'cPerson.reportathreat(ThreatReportViewModel)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="reportathreat" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="199">Correct the casing of 'reportathreat' in member name 'cPerson.reportathreat(ThreatReportViewModel)' by changing it to 'Reportathreat'.</Issue>
            </Message>
            <Message Id="modelobj" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="199">In method 'cPerson.reportathreat(ThreatReportViewModel)', correct the spelling of 'modelobj' in parameter name 'modelobj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="reportathreat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="199">Correct the spelling of 'reportathreat' in member name 'cPerson.reportathreat(ThreatReportViewModel)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="228">'cPerson.reportathreat(ThreatReportViewModel)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="208">In externally visible method 'cPerson.reportathreat(ThreatReportViewModel)', validate parameter 'modelobj' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#role" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="role" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="53">Correct the casing of 'role' in member name 'cPerson.role' by changing it to 'Role'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#station" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="station" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="56">Correct the casing of 'station' in member name 'cPerson.station' by changing it to 'Station'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateProfileRequest(WebApplication.Models.cPerson)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="281">In method 'cPerson.UpdateProfileRequest(cPerson)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Userobj" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="275">In member 'cPerson.UpdateProfileRequest(cPerson)', correct the casing of 'Userobj' in parameter name 'Userobj' by changing it to 'userobj'.</Issue>
            </Message>
            <Message Id="Userobj" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="275">In method 'cPerson.UpdateProfileRequest(cPerson)', correct the spelling of 'Userobj' in parameter name 'Userobj' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="295">'cPerson.UpdateProfileRequest(cPerson)' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="284">In externally visible method 'cPerson.UpdateProfileRequest(cPerson)', validate parameter 'Userobj' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#workat" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="workat" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="59">Correct the casing of 'workat' in member name 'cPerson.workat' by changing it to 'Workat'.</Issue>
            </Message>
            <Message Id="workat" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="cPerson.cs" Line="59">Correct the spelling of 'workat' in member name 'cPerson.workat' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PanicAlertViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PanicAttackdetail" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Attackdetail" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="PanicAlertViewModel.cs" Line="10">Correct the spelling of 'Attackdetail' in member name 'PanicAlertViewModel.PanicAttackdetail' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="panicAttack" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="panic" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'panic' in type name 'panicAttack' by changing it to 'Panic'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#panic_date" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="date" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="panicAttack.cs" Line="16">Correct the casing of 'date' in member name 'panicAttack.panic_date' by changing it to 'Date'.</Issue>
            </Message>
            <Message Id="panic" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="panicAttack.cs" Line="16">Correct the casing of 'panic' in member name 'panicAttack.panic_date' by changing it to 'Panic'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="panicAttack.cs" Line="16">Remove the underscores from member name 'panicAttack.panic_date'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PanicAttack_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="panicAttack.cs" Line="12">Remove the underscores from member name 'panicAttack.PanicAttack_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Seen_Status" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="panicAttack.cs" Line="18">Remove the underscores from member name 'panicAttack.Seen_Status'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#User_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="panicAttack.cs" Line="14">Remove the underscores from member name 'panicAttack.User_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProfileSettingViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#UpdateInfodetail" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Infodetail" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ProfileSettingViewModel.cs" Line="10">Correct the spelling of 'Infodetail' in member name 'ProfileSettingViewModel.UpdateInfodetail' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Threat" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Level_Of_Threat" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Threat.cs" Line="12">Remove the underscores from member name 'Threat.Level_Of_Threat'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThreatNotification_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Threat.cs" Line="11">Remove the underscores from member name 'Threat.ThreatNotification_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThreatReport_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Threat.cs" Line="10">Remove the underscores from member name 'Threat.ThreatReport_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreatDetails" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'ThreatDetails' because it creates members of the following IDisposable types: 'MySqlConnection'. If 'ThreatDetails' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Any_Personal_Reason" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="25">Remove the underscores from member name 'ThreatDetails.Any_Personal_Reason'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckBox" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="31">Change 'ThreatDetails.CheckBox' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckBoxes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="33">Change 'ThreatDetails.CheckBoxes' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfirmDetailsOfThreat(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="104">In method 'ThreatDetails.ConfirmDetailsOfThreat(string)', object 'cmd3' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'cmd3' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="80">In method 'ThreatDetails.ConfirmDetailsOfThreat(string)', call System.IDisposable.Dispose on object 'cmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Activation" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="76">In member 'ThreatDetails.ConfirmDetailsOfThreat(string)', correct the casing of 'Activation' in parameter name 'ActivationCode' by changing it to 'activation'.</Issue>
            </Message>
            <Message Id="numRowsUpdated" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="110">'ThreatDetails.ConfirmDetailsOfThreat(string)' declares a variable, 'numRowsUpdated', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="threatDetailId" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="87">'ThreatDetails.ConfirmDetailsOfThreat(string)' declares a variable, 'threatDetailId', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="83">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'ThreatDetails.ConfirmDetailsOfThreat(string)' could contain the following variables 'ActivationCode'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="108">The query string passed to 'MySqlCommand.CommandText.set(string)' in 'ThreatDetails.ConfirmDetailsOfThreat(string)' could contain the following variables 'reader["ConfirmationCode"]'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="95">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ThreatDetails.ConfirmDetailsOfThreat(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="83">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ThreatDetails.ConfirmDetailsOfThreat(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="108">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ThreatDetails.ConfirmDetailsOfThreat(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#connection_open" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ThreatDetails.connection_open' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Date_of_Incidence" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="of" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="20">Correct the casing of 'of' in member name 'ThreatDetails.Date_of_Incidence' by changing it to 'Of'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="20">Remove the underscores from member name 'ThreatDetails.Date_of_Incidence'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Muhafiz_Notify_To" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Muhafiz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="29">Correct the spelling of 'Muhafiz' in member name 'ThreatDetails.Muhafiz_Notify_To' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="29">Remove the underscores from member name 'ThreatDetails.Muhafiz_Notify_To'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Notify_Any" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="27">Remove the underscores from member name 'ThreatDetails.Notify_Any'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Open_Local_Connection()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="MessageString" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="69">'ThreatDetails.Open_Local_Connection()' declares a variable, 'MessageString', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Threat_Detail_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatDetails.cs" Line="13">Remove the underscores from member name 'ThreatDetails.Threat_Detail_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Threatnotification" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Threatnotification" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Threatnotification' in type name 'Threatnotification'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Level_Of_Threat" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Threatnotification.cs" Line="11">Remove the underscores from member name 'Threatnotification.Level_Of_Threat'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessThreat_status" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="status" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Threatnotification.cs" Line="13">Correct the casing of 'status' in member name 'Threatnotification.ProcessThreat_status' by changing it to 'Status'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Threatnotification.cs" Line="13">Remove the underscores from member name 'Threatnotification.ProcessThreat_status'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThreatNotification_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Threatnotification.cs" Line="10">Remove the underscores from member name 'Threatnotification.ThreatNotification_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#User_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="Threatnotification.cs" Line="15">Remove the underscores from member name 'Threatnotification.User_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreatReportViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AllCheckBoxes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="22">Change 'ThreatReportViewModel.AllCheckBoxes' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="22">Change 'List&lt;CheckBoxLists&gt;' in 'ThreatReportViewModel.AllCheckBoxes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllCheckBoxesNotify" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="29">Change 'ThreatReportViewModel.AllCheckBoxesNotify' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="29">Change 'List&lt;CheckBoxLists&gt;' in 'ThreatReportViewModel.AllCheckBoxesNotify' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MuhafizNotify" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="19">Change 'ThreatReportViewModel.MuhafizNotify' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="19">Change 'List&lt;WhomMuhafizNotify&gt;' in 'ThreatReportViewModel.MuhafizNotify' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Muhafiz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="19">Correct the spelling of 'Muhafiz' in member name 'ThreatReportViewModel.MuhafizNotify' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NotidiedName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="18">Change 'ThreatReportViewModel.NotidiedName' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="18">Change 'List&lt;WhomUserNotified&gt;' in 'ThreatReportViewModel.NotidiedName' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Notidied" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="18">Correct the spelling of 'Notidied' in member name 'ThreatReportViewModel.NotidiedName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedCheckBoxes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="25">Change 'ThreatReportViewModel.SelectedCheckBoxes' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedCheckBoxesNotify" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="32">Change 'ThreatReportViewModel.SelectedCheckBoxesNotify' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SuspectsName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="17">Change 'ThreatReportViewModel.SuspectsName' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="17">Change 'List&lt;ThreatSuspect&gt;' in 'ThreatReportViewModel.SuspectsName' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UserSelectedCheckBoxes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="23">Change 'ThreatReportViewModel.UserSelectedCheckBoxes' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="23">Change 'List&lt;CheckBoxLists&gt;' in 'ThreatReportViewModel.UserSelectedCheckBoxes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UserSelectedCheckBoxesNotify" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="30">Change 'ThreatReportViewModel.UserSelectedCheckBoxesNotify' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatReportViewModel.cs" Line="30">Change 'List&lt;CheckBoxLists&gt;' in 'ThreatReportViewModel.UserSelectedCheckBoxesNotify' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreatSuspect" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Full_Name" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatSuspect.cs" Line="12">Remove the underscores from member name 'ThreatSuspect.Full_Name'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Suspect_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="ThreatSuspect.cs" Line="10">Remove the underscores from member name 'ThreatSuspect.Suspect_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UpdateInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Profile_Settings_id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="UpdateInfo.cs" Line="12">Correct the casing of 'id' in member name 'UpdateInfo.Profile_Settings_id' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="UpdateInfo.cs" Line="12">Remove the underscores from member name 'UpdateInfo.Profile_Settings_id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProfileSetting_Request_Time" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="UpdateInfo.cs" Line="18">Remove the underscores from member name 'UpdateInfo.ProfileSetting_Request_Time'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#User_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2016-08-10 14:30:37Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="I:\Source Control\Final Code\Web Application\thistimepls\Models" File="UpdateInfo.cs" Line="14">Remove the underscores from member name 'UpdateInfo.User_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
   <Name>URI return values should not be strings</Name>
   <Description>If a function name contains "uri" or "url" or "urn" and the return type is string, the return type should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182176.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802">
   <Name>Use literals where appropriate</Name>
   <Description>Prefer literals over InitOnly fields if values do not have to be calculated at runtime.</Description>
   <Resolution Name="Default">Field {0} is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182280.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
