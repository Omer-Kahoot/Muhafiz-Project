@model WebApplication.Models.ThreatReportViewModel

@{
    ViewBag.Title = "Process";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

}

@using (Html.BeginForm("Process", "Admin", FormMethod.Post))
{
    <div class="form-horizontal">
       
        <div class="form-group">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
             <div class="row">
                 <div class="col-md-offset-4">
                     <h2>Details of threat</h2>
                 </div>
             </div>
        </div>
        <div class="form-group">
           <div class="row">

               @Html.HiddenFor(model => model.ThreatNotification.ThreatNotification_Id);

           </div>


        </div>
        <div class="form-group">
            @Html.Label("Threat Report ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Threat.ThreatReport_Id, new { htmlAttributes = new { @class = "form-control", @id= "#textboxisze" } })
                @Html.ValidationMessageFor(model => model.Threat.ThreatReport_Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Level of Threat", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Threat.Level_Of_Threat, new { htmlAttributes = new { @class = "form-control", @id = "#textboxisze" } })
                @Html.ValidationMessageFor(model => model.Threat.Level_Of_Threat, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Date of Incident", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                 
                  @Html.Partial("DatePicker")
                @Html.ValidationMessageFor(model => model.ThreatDetails.Date_of_Incidence, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ThreatDetails.Source, htmlAttributes: new { @class = "control-label col-md-2", @id = "myNewId" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ThreatDetails.Source, new SelectList(
                  new List<Object>{
                       new { value = "phone" , text = "phone"  },
                       new { value = "SMS" , text = "SMS" },
                       new { value = "verbal" , text = "verbal"},
                       new { value = "physical" , text = "physical"},
                       new { value =  "Internet" , text = "Internet"}

                    },
                  "value",
                  "text",
                   0))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThreatDetails.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ThreatDetails.Details, new { @class = "form-control", @id = "#textboxisze" })
                @Html.ValidationMessageFor(model => model.ThreatDetails.Details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThreatDetails.Witness, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.ThreatDetails.Witness, true) Yes
                @Html.RadioButtonFor(model => model.ThreatDetails.Witness, false) No

                @Html.ValidationMessageFor(model => model.ThreatDetails.Witness, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Reason for threat", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ThreatDetails.Any_Personal_Reason, new { @class = "form-control", @id = "#textboxisze" })
                @Html.ValidationMessageFor(model => model.ThreatDetails.Any_Personal_Reason, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Number Of Suspects", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ThreatDetails.NumberOfSuspects, new SelectList(
                  new List<Object>{
                       new { value = 0 , text = "0"  },
                       new { value = 1 , text = "1" },
                       new { value = 2 , text = "2"},
                       new { value = 3 , text = "3"  },
                       new { value = 4 , text = "4" },
                       new { value = 5 , text = "5"},
                        new { value = 6 , text = "6"  },
                       new { value = 7 , text = "7" },
                       new { value = 8 , text = "8"},
                       new { value = 9 , text = "9"  },
                       new { value = 10 , text = "10" }




                    },
                  "value",
                  "text",
                   0), new { @id = "sourcedropdown" })
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div id='divTxtGroup'></div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Who have you notified?", htmlAttributes: new { @class = "control-label col-md-2", @id = "#textboxisze" })
            <div class="col-md-10">
                
                    @foreach (var g in Model.AllCheckBoxes)
                    {
                       
                            <input type="checkbox"
                                   name="SelectedCheckBoxes" value="@g.Id" id="@g.Id"
                                   @{if (Model.SelectedCheckBoxes.Contains(g.Id)) { <text> checked='checked' </text>   } } />
                            <label for="@g.Id">@g.Name</label>
                        
                        }
               
            </div>



        </div>
        
    
        <div class="form-group">
            @Html.Label("What was their reponse?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ThreatDetails.Response, new { @class = "form-control", @id = "#textboxisze" })
                @Html.ValidationMessageFor(model => model.ThreatDetails.Response, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.Label("Who should Muhafiz Notify?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                    @foreach (var g in Model.AllCheckBoxesNotify)
                    {
                       
                            <input type="checkbox"
                                   name="SelectedCheckBoxesNotify" value="@g.Id" id="@g.Id"
                                   @{if (Model.SelectedCheckBoxesNotify.Contains(g.Id)) { <text> checked='checked' </text>    } } />
                            <label for="@g.Id">@g.Name</label>
                       
    }
               

            </div>



        </div>



        <div class="form-group">

            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" id="sub"/>
            </div>

        </div>
    </div>
      

}
<div>
    @Html.ActionLink("Back to List", "GetAllThreathRequests")
</div>

<html lang="en">
<head>
    <meta charset="utf-8">

    <script src="~/scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
      
    
        $(document).ready(function () {
           
           
            $("#sourcedropdown").change(function () {
                
                $("#divTxtGroup").empty();
                var num = this.value;
                if (num > 0) {
                    for (i = 1; i <= num; i++) {
                        var newTextBoxDiv1 = $(document.createElement('div')).attr("id", 'divTxt' + i);
                        newTextBoxDiv1.after().html('<label>Name ' + i + ' : </label><input type="text" id="txt' + i + '">');
                        newTextBoxDiv1.appendTo("#divTxtGroup");

                    }

                    $('#txt' + num).blur(function () {
                        for (i = 1; i <= num; i++) {
                            $.ajax({
                                url: '@Url.Action("test", "Admin")',
                                data: { TextBoxVal: $("#txt" + i).val() },
                                type: 'POST',
                                success: function (data) {
                                    // alert(data);
                                }
                            });
                        }


                    });


                }

            });
            var element = document.getElementById("txtStartDate");
            var flag = true;
            $(element).blur(function () {
                if (!$(this).val() && flag) {
                  // alert("" It's empty");
                }
                else {

                    
                    $.ajax({
                        url: '@Url.Action("PostDateToCont", "Admin")',
                        data: { DateValue: $(this).val() },
                        type: 'POST',
                        success: function (data) {
                            // alert(data);
                        }
                    });
                    
                }
            });
        
            $("#sub").mousedown(function () {
                flag = true;
                $(element).focus();
            });
           



                  });
    </script>
</head>
<body>
   
</body>
</html>

